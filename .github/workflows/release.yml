name: Release (npm)

on:
  push:
    tags:
      - 'v*' # e.g. v0.1.0
  workflow_dispatch:

permissions:
  contents: read
  id-token: write # for npm provenance

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # Add this step as a fallback if pnpm is still not found
      - name: Install pnpm (manual fallback)
        run: npm install -g pnpm@9

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm -r test

      # Build UI once (CLI prepack will only sync/copy)
      - name: Build UI (so CLI prepack is fast)
        run: pnpm -C packages/ui build

      # Safety: verify git tag matches package versions
      - name: Verify versions match tag
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          echo "Tag is: $TAG"
          jq -r '.version' packages/core/package.json     | grep -x "$TAG"
          jq -r '.version' packages/cli/package.json      | grep -x "$TAG"
          jq -r '.version' packages/create-statikapi/package.json | grep -x "$TAG"
          echo "✔ versions match"

      # Optional: pack dry-run to ensure files are included (bin+ui)
      - name: Pack dry-run (core)
        working-directory: packages/core
        run: npm pack --dry-run
      - name: Pack dry-run (cli)
        working-directory: packages/cli
        run: |
          npm pack --dry-run
          tar -tf *.tgz | grep -E 'bin/|ui/' || (echo "ui/ or bin/ missing from tarball" && exit 1)
      - name: Pack dry-run (create-statikapi)
        working-directory: packages/create-statikapi
        run: npm pack --dry-run

      # Publish order: core → cli → create-statikapi
      - name: Publish @statikapi/core
        working-directory: packages/core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance

      - name: Publish statikapi (CLI)
        working-directory: packages/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance

      - name: Publish create-statikapi
        working-directory: packages/create-statikapi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --provenance
